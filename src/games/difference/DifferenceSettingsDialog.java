package games.difference;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JSlider;
import javax.swing.SwingConstants;

import games.Modus;
import games.dialogeGUIs.GameSettingsDialog;


public class DifferenceSettingsDialog extends GameSettingsDialog {
	/**
	 * SerialVersionUID generated by Eclipse
	 */
	private static final long serialVersionUID = 1L;

	static final String DECK = "Deck";

	static final String ANSWERTIME = "AnswerTime";

	static final String HIDE = "Hide";

	private Difference dif;

	private JCheckBox bildVerschwindenCheckBox;

	private JSlider timeToAnswerSlider;

	private JComboBox<String> deckComboBox;
	public DifferenceSettingsDialog(Difference dif, boolean inGame) {
		super(dif, inGame);
		this.dif = dif;
		initGUI();
		propertiesToSettings();
	}

	private void initGUI(){
		{
			if(dif.modus == Modus.SOLO){
				timeToAnswerSlider = new JSlider(SwingConstants.HORIZONTAL,0,100,dif.getCdTime());
				timeToAnswerSlider.setMajorTickSpacing(10);
			}
			else{
				timeToAnswerSlider = new JSlider(SwingConstants.HORIZONTAL,3,15,dif.getCdTime());
				timeToAnswerSlider.setMajorTickSpacing(1);
			}
			if(settings != null && settings.containsKey(ANSWERTIME)){
				String answerTime = settings.getProperty(ANSWERTIME);
				timeToAnswerSlider.setValue(Integer.parseInt(answerTime));
			}
			timeToAnswerSlider.setMinorTickSpacing(1);
			timeToAnswerSlider.setSnapToTicks(true);
			timeToAnswerSlider.setPaintTicks(true);
			timeToAnswerSlider.setPaintLabels(true);
			addSettingsComponent("Zeit nach buzzern:", timeToAnswerSlider);
		}
		{
			ComboBoxModel<String> deckComboBoxModel =
				new DefaultComboBoxModel<String>(dif.getDeckNames(true).toArray(new String[1]));
			
			deckComboBox = new JComboBox<String>();
			deckComboBox.setModel(deckComboBoxModel);
			addSettingsComponent("Deck", deckComboBox);
		}
		if(dif.modus == Modus.SOLO){
			bildVerschwindenCheckBox = new JCheckBox();
			bildVerschwindenCheckBox.setSelected(dif.bildAusblenden);
			addSettingsComponent("Bild nach buzzern ausblenden?", bildVerschwindenCheckBox);
		}
		
	}

	@Override
	public void speichern(){
		settingsToProperties();
		super.speichern();
	}
	
	@Override
	public void settingsToProperties(){
		super.settingsToProperties();
		settings.setProperty(DECK, ""+deckComboBox.getSelectedItem());
		settings.setProperty(ANSWERTIME, ""+timeToAnswerSlider.getValue());
		if(dif.modus == Modus.SOLO){
			settings.setProperty(HIDE, bildVerschwindenCheckBox.isSelected() ? "TRUE" : "FALSE");
		}
	}
	
	public void propertiesToSettings(){
		super.propertiesToSettings();
		if(settings == null){
			return;
		}
		String deck = settings.getProperty(DECK);
		setSelectedElement(deckComboBox, deck);
		if(myGame.modus == Modus.SOLO){
			String hide = settings.getProperty(HIDE);
			bildVerschwindenCheckBox.setSelected(hide.equals("TRUE"));
		}
	}
	
	private void setSelectedElement(JComboBox<String> cb, String element) {
		if(element == null || cb == null) return;
		for(int i=0; i<cb.getItemCount(); i++){
			if(cb.getItemAt(i).equals(element)){
				cb.setSelectedIndex(i);
				break;
			}
		}
	}
}
