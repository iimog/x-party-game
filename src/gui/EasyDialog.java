package gui;

import gui.components.DefaultButton;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;

import util.ConfirmListener;
import util.InputListener;


public class EasyDialog extends AnzeigeDialog {
	/**
	 * Serial Version UID generated by Eclipse
	 */
	private static final long serialVersionUID = 8005665377962546275L;
	public static final int MESSAGE_MODE = 0;
	public static final int CONFIRM_MODE = 1;
	public static final int INPUT_MODE = 2;
	
	public static void showConfirm(String message, Component icon, ConfirmListener cLis){
		ed = new EasyDialog(message, icon, CONFIRM_MODE);
		ed.instance.showDialog(ed);
		ed.cListener = cLis;
		ed.requestFocusForMainButton();
	}
	public static void showInput(String message, String defText, Component icon, InputListener iLis){
		ed = new EasyDialog(message, icon, INPUT_MODE);
		ed.setDefText(defText);
		ed.instance.showDialog(ed);
		ed.iListener = iLis;
		ed.requestFocusForMainButton();
	}
	private void setDefText(String defText) {
		this.defText = defText;
		if(mode == INPUT_MODE) inputTextField.setText(defText);
	}
	public static void showMessage(String message){
		showMessage(message, null);
	}
	public static void showMessage(String message, Component icon){
		EasyDialog ed = new EasyDialog(message, icon);
		ed.instance.showDialog(ed);
		ed.requestFocusForMainButton();
	}
	
	private int mode;

	private static EasyDialog ed;
	private String message;
	private ConfirmListener cListener;
	private InputListener iListener;
	private Component icon;
	private JTextField inputTextField;
	private String defText = "";
	private Component preselectedComponent;

	private EasyDialog(String message, Component icon){
		this(message, icon, MESSAGE_MODE);
	}

	private EasyDialog(String message, Component icon, int mode){
		this.message = message;
		this.icon = icon;
		this.mode = mode;
		initGUI();
	}

	private JPanel getConfirmButtonPanel(){
		JPanel panel = new JPanel();
		panel.setOpaque(false);
		DefaultButton jaButton = new DefaultButton("Ja");
		jaButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				cListener.confirmOptionPerformed(ConfirmListener.YES_OPTION);
			}
		});
		panel.add(jaButton);
		DefaultButton neinButton = new DefaultButton("Nein");
		neinButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				cListener.confirmOptionPerformed(ConfirmListener.NO_OPTION);
			}
		});
		panel.add(neinButton);
		DefaultButton abbrechenButton = new DefaultButton("Abbrechen");
		abbrechenButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				cListener.confirmOptionPerformed(ConfirmListener.CANCEL_OPTION);
			}
		});
		panel.add(abbrechenButton);
		preselectedComponent = jaButton;
		return panel;
	}
	private JPanel getMessageButtonPanel(){
		JPanel panel = new JPanel();
		panel.setOpaque(false);
		JButton okButton = new DefaultButton("OK");
		okButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				instance.closeDialog();
			}
		});
		panel.add(okButton);
		preselectedComponent = okButton;
		return panel;
	}
	private JPanel getInputButtonPanel(){
		JPanel hauptpanel = new JPanel();
		hauptpanel.setOpaque(false);
		hauptpanel.setLayout(new GridLayout(2,1));
		inputTextField = new JTextField(defText);
		hauptpanel.add(inputTextField);
		JPanel panel = new JPanel();
		hauptpanel.add(panel);
		JButton okButton = new DefaultButton("OK");
		okButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				iListener.giveMeInput(inputTextField.getText());
			}
		});
		panel.add(okButton);
		JButton abbrechenButton = new DefaultButton("Abbrechen");
		abbrechenButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				iListener.abgebrochen();
			}
		});
		panel.add(abbrechenButton);
		preselectedComponent = inputTextField;
		return hauptpanel;
	}

	private void initGUI(){
		JPanel hauptbereich = new JPanel();
		hauptbereich.setOpaque(false);
		hauptbereich.setLayout(new BorderLayout());
		JLabel label = new JLabel(message);
		label.setHorizontalAlignment(SwingConstants.CENTER);
		label.setFont(new java.awt.Font("Comic Sans MS",1,22));
		label.setForeground(Color.WHITE);
		hauptbereich.add(label, BorderLayout.NORTH);
		if(icon != null){
			JPanel hilfsPanel = new JPanel();
			hilfsPanel.setOpaque(false);
			hauptbereich.add(hilfsPanel, BorderLayout.CENTER);
			hilfsPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
			hilfsPanel.add(icon);
		}
		JPanel panel = null;
		if(mode == MESSAGE_MODE){
			panel = getMessageButtonPanel();
		}
		if(mode == CONFIRM_MODE){
			panel = getConfirmButtonPanel();
		}
		if(mode == INPUT_MODE){
			panel = getInputButtonPanel();
			inputTextField.requestFocus();
			inputTextField.setCaretPosition(inputTextField.getText().length());
		}
		hauptbereich.add(panel, BorderLayout.SOUTH);
		dialogPane.add(hauptbereich);
		dialogPane.setBorder(BorderFactory.createEtchedBorder(BevelBorder.LOWERED));
	}
	
	public boolean requestFocusForMainButton() {
		boolean reqFoc = false;
		if(preselectedComponent != null) {
			reqFoc = preselectedComponent.requestFocusInWindow();
		}
		return reqFoc;
	}
}

